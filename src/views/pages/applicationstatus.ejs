<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css">
  <title>Application portal</title>
</head>
<body class="grey lighten-3"">
  <!-- NAVBAR -->
  <div>
    <div style = "text-align: center; ">
      
      <ul  style = "display: inline-block;text-align: left;" >
          <li class="logged-in" style="display: none;">
            <a href="#" class="grey-text modal-trigger" data-target="modal-account">Submitted Application</a>
          </li>
          <li class="logged-in" style="display: none;">
            <a href="#" class="grey-text" id="logout">Logout</a>
          </li>
          <li class="logged-out" style="display: none;">
            <a href="#" class="grey-text modal-trigger" data-target="modal-login" style = "background-color: whitesmoke; border:1px solid #D6D2C4;padding:2em;" > Check Your Application</a>
          </li>
          <li class="logged-out" style="display: none;">
            <a href="#" class="grey-text modal-trigger" data-target="modal-signup" style = "background-color: #F3C5C5;width:100%; border:1px solid #D6D2C4;padding:2em;">Start Your Application</a>
          </li>
          <li class="logged-out" style="display: none;">
            <a href="/dashboard" class="grey-text modal-trigger" style = "background-color: whitesmoke; width:100%; border:1px solid #D6D2C4;padding:2em;">Return to Dashboard</a>
          </li>
        </span>
      </ul>
    </div>
  </div>
  <!-- SIGN Up/ start MODAL -->
  <div id="modal-signup" class="modal">
    <div class="modal-content">
      <h4>Cat Adoption Form</h4><br />
      <form id="signup-form">
        <div class="input-field">
          <input type="email" id="signup-email" required />
          <label for="signup-email">Email address</label>
        </div>
        <div class="input-field">
          <input type="password" id="signup-password" required />
          <label for="signup-password">Choose password</label>
        </div>
        <div class="input-field">
          <input type="text" id="signup-ocupation" required />
          <label for="signup-occupation">Your Occupation</label>
        </div>
        <div class="input-field">
          <input type="text" id="signup-phone" required />
          <label for="signup-phone">Phone Number</label>
        </div>
        <div class="input-field">
          <p class="full">
            <label>Please answer the following questions using the text area below: (1) Are you financially sound to support your pet? (2) Are you adopting a cat for yourself? (3) Do you have time to play with your kitten/cat on a daily basis? (4) Did you get consent from your family members/roommates for having a pet? (5) Do you have other pets at home? If so, what kind/breed/sex/age? (6) How much do you plan to spend on your kitten(s) monthly per cat ?</label>
           
          </p>
          <input type="text" id="signup-bio" required />
          <label for="signup-bio"></label>
        </div>
        <button class="btn yellow darken-2 z-depth-0">Submit</button>
      </form>
    </div>
  </div>
  <!-- LOGIN MODAL -->
  <div id="modal-login" class="modal">
    <div class="modal-content">
      <h4>Account Verification</h4><br />
      <form id="login-form">
        <div class="input-field">
          <input type="email" id="login-email" required />
          <label for="login-email">Email address</label>
        </div>
        <div class="input-field">
          <input type="password" id="login-password" required />
          <label for="login-password">Your password</label>
        </div>
        <button class="btn yellow darken-2 z-depth-0">Done</button>
      </form>
    </div>
  </div>
  <!-- ACCOUNT MODAL -->
  <div id="modal-account" class="modal">
    <div class="modal-content center-align">
      <h4>Submitted Application</h4><br />
      <div class="account-details"></div>
    </div>
  </div>
  <!-- CREATE GUIDE MODAL -->
  <div id="modal-create" class="modal">
    <div class="modal-content">
      <h4>Create Guide</h4><br />
      <form id="create-form">
        <div class="input-field">
          <input type="text" id="title" required>
          <label for="title">Guide Title</label>
        </div>
        <div class="input-field">
          <textarea id="content" class="materialize-textarea" required></textarea>
          <label for="content">Guide Content</label>
        </div>
        <button class="btn yellow darken-2 z-depth-0">Create</button>
      </form>
    </div>
  </div>
  <!-- GUIDE LIST -->
  <div class="container" style="margin-top: 40px;">
    <ul class="collapsible z-depth-0 guides" style="border: none;">
    </ul>
  </div>
  
  <script src="https://www.gstatic.com/firebasejs/5.6.0/firebase-app.js"></script>
  <script src="https://www.gstatic.com/firebasejs/5.6.0/firebase-auth.js"></script>
  <script src="https://www.gstatic.com/firebasejs/5.6.0/firebase-firestore.js"></script>
  <script>
    // Initialize Firebase
    var config = {
      apiKey: "AIzaSyAxWg1IFP2uS5KPHyM7fxb179Mltni4Sgg",
      authDomain: "catwise-6bbf2.firebaseapp.com",
      projectId: "catwise-6bbf2",
      storageBucket: "catwise-6bbf2.appspot.com",
      messagingSenderId: "861554494369",
      appId: "1:861554494369:web:c9126aeaa42cd099df59e0",
      measurementId: "G-TX81YZKCFB"
    };

    
    firebase.initializeApp(config);
    
    // make auth and firestore references
    const auth = firebase.auth();
    const db = firebase.firestore();
    // update firestore settings
    db.settings({ timestampsInSnapshots: true });



// auth.js

// listen for auth status changes
auth.onAuthStateChanged(user => {
  if (user) {
    db.collection('guides').onSnapshot(snapshot => {
      setupGuides(snapshot.docs);
      setupUI(user);
    }, err => console.log(err.message));
  } else {
    setupUI();
    setupGuides([]);
  }
});
// create new guide
const createForm = document.querySelector('#create-form');
createForm.addEventListener('submit', (e) => {
  e.preventDefault();
  db.collection('guides').add({
    title: createForm.title.value,
    content: createForm.content.value
  }).then(() => {
    // close the create modal & reset form
    const modal = document.querySelector('#modal-create');
    M.Modal.getInstance(modal).close();
    createForm.reset();
  }).catch(err => {
    console.log(err.message);
  });
});
// signup
const signupForm = document.querySelector('#signup-form');
signupForm.addEventListener('submit', (e) => {
  e.preventDefault();
  
  // get user info
  const email = signupForm['signup-email'].value;
  const password = signupForm['signup-password'].value;

  // sign up the user
  // sign up the user & add firestore data
  auth.createUserWithEmailAndPassword(email, password).then(cred => {
    return db.collection('users').doc(cred.user.uid).set({
      application: signupForm['signup-bio'].value,
      phone: signupForm['signup-phone'].value,
      occupation: signupForm['signup-bio'].value
    });
  }).then(() => {
    // close the signup modal & reset form
    const modal = document.querySelector('#modal-signup');
    M.Modal.getInstance(modal).close();
    signupForm.reset();
  });
});
// logout
const logout = document.querySelector('#logout');
logout.addEventListener('click', (e) => {
  e.preventDefault();
  auth.signOut();
});
// login
const loginForm = document.querySelector('#login-form');
loginForm.addEventListener('submit', (e) => {
  e.preventDefault();
  
  // get user info
  const email = loginForm['login-email'].value;
  const password = loginForm['login-password'].value;
  // log the user in
  auth.signInWithEmailAndPassword(email, password).then((cred) => {
    // close the signup modal & reset form
    const modal = document.querySelector('#modal-login');
    M.Modal.getInstance(modal).close();
    loginForm.reset();
  });
});

// index.js

// DOM elements
const guideList = document.querySelector('.guides');
const loggedOutLinks = document.querySelectorAll('.logged-out');
const loggedInLinks = document.querySelectorAll('.logged-in');
const accountDetails = document.querySelector('.account-details');
const setupUI = (user) => {
  if (user) {
    // account info
    const html = `
      <div>Logged in as ${user.email}</div>
    `;
    accountDetails.innerHTML = html;
    db.collection('users').doc(user.uid).get().then(doc => {
      const html = `
        <div>Logged in as ${user.email}</div>
        <p > Your application has been successful submitted. It has been reviewed in progress. We will send you an email update once a decision is made.   </p>
        <div>Your detailed application statement: ${doc.data().application}</div>
      `;
      accountDetails.innerHTML = html;
    });
    // toggle user UI elements
    loggedInLinks.forEach(item => item.style.display = 'block');
    loggedOutLinks.forEach(item => item.style.display = 'none');
  } else {
    // clear account info
    accountDetails.innerHTML = '';
    // toggle user elements
    loggedInLinks.forEach(item => item.style.display = 'none');
    loggedOutLinks.forEach(item => item.style.display = 'block');
  }
};
// setup guides
const setupGuides = (data) => {
  if (data.length) {
    let html = '';
    data.forEach(doc => {
      const guide = doc.data();
      const li = `
        <li>
          <div class="collapsible-header grey lighten-4"> ${guide.title} </div>
          <div class="collapsible-body white"> ${guide.content} </div>
        </li>s
      `;
      html += li;
    });
    guideList.innerHTML = html
  } else {
    guideList.innerHTML = '<h5 class="center-align"></h5>';
  }
  
};
// setup materialize components
document.addEventListener('DOMContentLoaded', function() {
  var modals = document.querySelectorAll('.modal');
  M.Modal.init(modals);
  var items = document.querySelectorAll('.collapsible');
  M.Collapsible.init(items);
});

  </script>
  <!-- Compiled and minified JavaScript -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>
 

<style>

ul li {
  
  padding: 100px 10px 5px 25px;
  list-style: none;
  margin: 0;
  vertical-align: middle;
} 
  
</style>

</body>
</html>